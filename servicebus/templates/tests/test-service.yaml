apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "hmcts.releasename.v2" . }}-test-configmap
data:
  entrypoint.sh: |-
    #!/bin/sh -xv

    namespace="$1"
    root_key="$2"
    queue_name="$3"

    servicebus_url="servicebus.windows.net"
    queue_url="https://${namespace}.${servicebus_url}/${queue_name}"
    expiry=${expiry:=$((60 * 60 * 24))} # Default token expiry is 1 day

    encoded_uri=$(echo -n $queue_url | jq -s -R -r @uri)
    ttl=$(($(date +%s) + $expiry))
    utf8_signature=$(printf "%s\n%s" $encoded_uri $ttl | iconv -t utf8)
    hash=$(echo -n "$utf8_signature" | openssl sha256 -hmac $root_key -binary | base64)
    encoded_hash=$(echo -n $hash | jq -s -R -r @uri)

    authorization_header="SharedAccessSignature sr=${encoded_uri}&sig=${encoded_hash}&se=${ttl}&skn=RootManageSharedAccessKey"

    httpstatuscode=$(curl -v -X POST \
      -H "Authorization: $authorization_header" \
      -H 'BrokerProperties: {"Label":"M1","State":"Active","TimeToLive":10}' \
      -H 'Content-Length: 18' \
      -H 'Content-Type: application/atom+xml;type=entry;charset=utf-8' \
      -d 'This is a message.' \
      "${queue_url}/messages?timeout=60" 2>&1 | grep 'HTTP/' | awk 'END{print $3}')

    [ "$httpstatuscode" = "201" ] && exit 0 || exit 1
---
{{- if .Values.setup.queues -}}
  {{- $queueName := (index .Values.setup.queues 0).name }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ template "hmcts.releasename.v2" . }}-test-service"
  annotations:
    "helm.sh/hook": test-success
spec:
  volumes:
    - name: configmap-volume
      configMap:
        defaultMode: 0755
        name: {{ template "hmcts.releasename.v2" . }}-test-configmap
  containers:
    - name: {{ template "hmcts.releasename.v2" . }}-test-service
      image: alpine:3.13
      volumeMounts:
        - name: configmap-volume
          mountPath: /entrypoint
      env:
        - name: QUEUE_NAME
          value: {{ template "hmcts.releasename.v2" . }}-{{ $queueName }}
        - name: NAMESPACE
          valueFrom:
            secretKeyRef:
              name: servicebus-access
              key: namespaceName
        - name: ROOT_KEY
          valueFrom:
            secretKeyRef:
              name: servicebus-access
              key: primaryKey
      command: ["sh", "-c", "apk add --update --no-cache openssl openssl-dev ca-certificates jq curl && /entrypoint/entrypoint.sh ${NAMESPACE} ${ROOT_KEY} ${QUEUE_NAME}"]
  restartPolicy: Never
{{- end }}
